server {
    listen 443 ssl http2;
    server_name urp.ogt11.com;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # SSL Certificates
    ssl_certificate /etc/certs/urp.ogt11.com/fullchain.pem;
    ssl_certificate_key /etc/certs/urp.ogt11.com/privkey.pem;

    # Client Certificate Configuration (if needed)
    ssl_client_certificate /home/samcn2/src/nullapi/certs/ca.crt;
    ssl_verify_client optional;
    ssl_verify_depth 2;

    # Root directory for static files
    root /home/samcn2/src/certM3/static;
    index index.html;

    # Common Headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Serve static landing page
    location = / {
        try_files $uri $uri/index.html index.html =404;
        add_header Cache-Control "no-cache";
    }

    # Static files for user-request service
    location /request/js/ {
        alias /home/samcn2/src/certM3/user-request/src/public/js/;
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    location /request/css/ {
        alias /home/samcn2/src/certM3/user-request/src/public/css/;
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    # User Request Service
    location /request/ {
        proxy_pass http://127.0.0.1:3006/request/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;
    }

    # User Manager Service
    location /manager/ {
        proxy_pass http://127.0.0.1:3005/;
        proxy_redirect off;
        
        # Pass SSL client certificate info for admin authentication
        proxy_set_header X-SSL-Client-DN $ssl_client_s_dn;
        proxy_set_header X-SSL-Client-CN $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
    }

    # Certificate Admin Service
    location /cert-request/ {
        rewrite ^/cert-request/(.*) /$1 break;
        proxy_pass http://127.0.0.1:3000;
        proxy_redirect off;
        
        # Pass SSL client certificate info for user authentication
        proxy_set_header X-SSL-Client-DN $ssl_client_s_dn;
        proxy_set_header X-SSL-Client-CN $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
        proxy_set_header X-Original-URI $request_uri;
    }

    # User Admin Service (Internal API)
    location /api/user-admin/ {
        proxy_pass http://127.0.0.1:3004/;
        proxy_redirect off;
        
        # Pass SSL client certificate info
        proxy_set_header X-SSL-Client-DN $ssl_client_s_dn;
        proxy_set_header X-SSL-Client-CN $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
    }

    # Certificate Admin Service (Internal API)
    location /api/cert-admin/certificates {
        proxy_pass http://127.0.0.1:3000/certificate;
        proxy_redirect off;
        
        # Pass SSL client certificate info
        proxy_set_header X-SSL-Client-DN $ssl_client_s_dn;
        proxy_set_header X-SSL-Client-CN $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
    }

    location /api/cert-admin/ {
        proxy_pass http://127.0.0.1:3000/;
        proxy_redirect off;
        
        # Pass SSL client certificate info
        proxy_set_header X-SSL-Client-DN $ssl_client_s_dn;
        proxy_set_header X-SSL-Client-CN $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
    }

    # Default handler for unmatched locations
    location / {
        try_files $uri $uri/ =404;
    }
} 
